#!/usr/bin/env python

#libraries
from fix_the_song_game import Fix_Song_Game
from clap_to_beat_game import clap_to_beat_game
from guess_the_mood_game import Guess_The_Mood_Game
from std_msgs.msg import Float64MultiArray
import rospy


#INIT
rospy.init_node('MT_pilot', anonymous=False)
rospy.loginfo("Node launched successfully")

#Play GTM levels 1 - 2


#Play FTS levels 1 - 3

#Play CTB level 1


"""

#init node
rospy.init_node('MT_pilot', anonymous=False)
rospy.loginfo("Node launched successfully")
right_arm_pos_pub = rospy.Publisher('/qt_robot/right_arm_position/command', Float64MultiArray, queue_size=10)
left_arm_pos_pub = rospy.Publisher('/qt_robot/left_arm_position/command', Float64MultiArray, queue_size=10)

#create arm msgs to move qt arms
arm_up_right = [-5, -59.599998474121094, -40.70000076293945] #motor pos for right arm to be in air
arm_up_left = [10.699999809265137, -59.599998474121094, -40.70000076293945] #motor pos for right arm to be in air
arm_right_msg = Float64MultiArray()
arm_left_msg = Float64MultiArray()
arm_left_msg.data = [arm_up_right[0], arm_up_right[1], arm_up_right[2]]
arm_left_msg.data = [arm_up_left[0], arm_up_left[1], arm_up_left[2]]

    
#init games
fix_song = Fix_Song_Game()
clap_game = clap_to_beat_game("easy")
guess_game = Guess_The_Mood_Game()

play = True

#Run fix the song
try:
    fix_song.transition_screen_blocking("Please listen to the robot", "Hi!,,, My name is Q-T!",should_gesture = False)#" #I am going to be playing 3 games with you today, Each game will be music themed and will only last for 2 minutes.")
    fix_song.qt_gesture("wave")
    fix_song.transition_screen_blocking("Please listen to the robot", "Hope you are well!...", should_gesture = False)
    fix_song.transition_screen_blocking("Please listen to the robot", "Would you like to play some games with me?...",should_gesture = False)
    consent = fix_song.yes_or_no_screen_custom("Would you like to play?", "")
    if consent:
        play = True 
    else:
        fix_song.transition_screen_blocking("Please listen to the robot", "Thanks a lot, it was nice meeting you! Hope we'll see you again soon!")
    if consent:
        fix_song.transition_screen_blocking("Please listen to QT", "Great!... Then, I am going to start the first game now!")
        fix_song.Main()
except():
    fix_song.pygame.quit
    rospy.loginfo("Audio may not be stopped due to interrupt")
finally:
    print("Shutting game down")


if consent:
    #Run guess the mood
    try:
        guess_game.transition_screen_blocking("Please listen to QT", "Alright, you have finished the game called fix the song... Next, we will play ay Guessing game!")
        guess_game.transition_screen_blocking("Please listen to QT", "I am going to start the next game now!", should_gesture = False)
        guess_game.Main()
    except():
        guess_game.pygame.quit
        rospy.loginfo("Audio may not be stopped due to interrupt")
    finally:
        print("Shutting game down")   


    #Run clap to beat
    try:
        #clap_game.transition_screen_blocking("Please listen to QT", "Great! you have finished guess the song, now we will play a clapping game!")
        #clap_game.qt_say("But first we need to get my drum ready!")
        #right_arm_pos_pub.publish(arm_right_msg)
        #left_arm_pos_pub.publish(arm_left_msg)
        #rospy.sleep(1)
        arm_up = [20.699999809265137, -59.599998474121094, -40.70000076293945] #motor pos for right arm to be in air
        clap_game.move_right_arm(arm_up)
        clap_game.move_left_arm(arm_up)
        rospy.sleep(3)
        #Delay and do it again, to increase the likihood it's done
        clap_game.move_right_arm(arm_up)
        clap_game.move_left_arm(arm_up)

        clap_game.transition_screen("Wait for the researcher to setup the drum.")
        clap_game.transition_screen_blocking("Please listen to QT", "I am going to start the last game now!")
        clap_game.Main()
        
        clap_game.transition_screen_blocking("All done!", "")
        clap_game.transition_screen_blocking("Thank you for playing with me !", "Thank you so much for playing with me... We are done for today... Thanks for helping us with this experiment... Hope you have a good day!.. ")
        clap_game.qt_emote("grin")
        clap_game.qt_gesture("wave")
        clap_game.qt_say("Bye byee!")
    except(): 
        clap_game.shutdown()
        clap_game.pygame.quit
        rospy.loginfo("Audio may not be stopped due to interrupt")
    finally:
        print("Shutting game down")

clap_game.qt_gesture("arms_up") #To reset arms
        
"""

