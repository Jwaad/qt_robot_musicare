#!/usr/bin/env python

#libraries
from musicare_lib import QTManager
from std_msgs.msg import Float64MultiArray
import rospy
import time

# Init node
rospy.init_node('Pilot', anonymous=False)
time.sleep(1)
rospy.loginfo("Return arms started successfully")

# Establish publishers
right_arm_pos_pub = rospy.Publisher('/qt_robot/right_arm_position/command', Float64MultiArray,
                                                 queue_size=10)
left_arm_pos_pub = rospy.Publisher('/qt_robot/left_arm_position/command', Float64MultiArray,
                                                queue_size=10)
time.sleep(1)

movement = ""
# loop until correct inputs
while movement != "1" and movement != "2":
    movement = input("1 for arms up, 2 for arms down: ")
    if movement == "1":
        arm_right = [2.9000000953674316, -84.69999694824219, -49.20000076293945] #motor pos for right arm to be in air
        arm_left = [-2.9000000953674316, -84.69999694824219, -49.20000076293945] #motor pos for right arm to be in air
        print("moving arms up: {}".format(arm_right))
    elif movement == "2":
        arm_right = [-83.69999694824219, -76.5999984741211, -17.200000762939453] #motor pos for right arm to be in air
        arm_left = [83.69999694824219, -76.5999984741211, -17.200000762939453] #motor pos for right arm to be in air 
        print("moving to home: {}".format(arm_right))

# Create empty msgs
arm_msg_right = Float64MultiArray()
arm_msg_left = Float64MultiArray()

# Populate data property of msg
arm_msg_right.data = arm_right
arm_msg_left.data = arm_left

# Publish msgs
right_arm_pos_pub.publish(arm_msg_right)
left_arm_pos_pub.publish(arm_msg_left)
time.sleep(1)
print("Finished moving arms")



